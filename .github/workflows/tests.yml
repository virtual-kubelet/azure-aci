name: azure-aci-test

on:
  push:
    branches: [master]
    paths-ignore: [ docs/**, "**.md", "**.mdx", "**.png", "**.jpg" ]
  pull_request_target:
    branches: [master]
    paths-ignore: [ docs/**, "**.md", "**.mdx", "**.png", "**.jpg" ]

jobs:
  detect-noop:
    runs-on: ubuntu-latest
    outputs:
      noop: ${{ steps.noop.outputs.should_skip  }}
    steps:
      - name: Detect No-op Changes
        id: noop
        uses: fkirc/skip-duplicate-actions@v5.1.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN  }}
          do_not_skip: '["workflow_dispatch", "schedule", "push"]'
          concurrent_skipping: false

  tests:
    env:
      ACTIVEDIRECTORYENDPOINTURL: 'https://login.microsoftonline.com'
      RESOURCEMANAGERENDPOINTURL: 'https://management.azure.com/'
      ACTIVEDIRECTORYGRAPHRESOURCEID: 'https://login.microsoftonline.com'
      SQLMANAGEMENTENDPOINTURL: 'https://management.core.windows.net:8443/'
      GALLERYENDPOINTURL: 'https://gallery.azure.com/'
      MANAGEMENTENDPOINTURL: 'https://manage.windowsazure.com/'
      CLIENTSECRET: ${{ secrets.CLIENT_SECRET }}
      WORKSPACEKEY: ${{ secrets.OMS_WORKSPACE_KEY }}

    runs-on: ubuntu-latest
    environment: test
    needs: detect-noop
    if: needs.detect-noop.outputs.noop != 'true'
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ secrets.GO_VERSION  }}

      - name: Check out code into the Go module directory
        if: github.event_name == 'pull_request_target'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Checkout
        if: github.event_name != 'pull_request_target'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run unit tests & Generate coverage
        env:
          clientId: ${{ secrets.CLIENTID  }}
          subscriptionId: ${{ secrets.SUBSCRIPTIONID  }}
          tenantId: ${{ secrets.TENANT_ID }}
          activeDirectoryEndpointUrl: ${{ env.ACTIVEDIRECTORYENDPOINTURL  }}
          resourceManagerEndpointUrl: ${{ env.RESOURCEMANAGERENDPOINTURL  }}
          activeDirectoryGraphResourceId: ${{ env.ACTIVEDIRECTORYGRAPHRESOURCEID  }}
          sqlManagementEndpointUrl: ${{ env.SQLMANAGEMENTENDPOINTURL  }}
          galleryEndpointUrl: ${{ env.GALLERYENDPOINTURL  }}
          managementEndpointUrl: ${{ env.MANAGEMENTENDPOINTURL  }}
          clientSecret: ${{ secrets.CLIENT_SECRET }}
          omsworkspaceID: ${{ secrets.OMSWORKSPACEID  }}
          omsworkspaceKey: ${{ secrets.OMS_WORKSPACE_KEY }}
        run: |
           make testauth test

      - name: Upload Codecov report
        uses: codecov/codecov-action@v3
        with:
          ## Repository upload token - get it from codecov.io. Required only for private repositories
          token: ${{ secrets.CODECOV_TOKEN  }}
          ## Comma-separated list of files to upload
          files: ./coverage.out
