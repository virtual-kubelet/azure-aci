name: e2e-tests

concurrency:
  group:  ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  pull_request_target:
    branches:
      - master
      - release-**
    types: [ opened, ready_for_review, reopened ]
    paths:
      - '.github/workflows/chart.yml'
      - 'charts/**'

env:
  REGISTRY: ghcr.io
  GO_VERSION: '1.20' # Common versions
  E2E_IMG_TAG: "e2e-ci"

permissions:
  id-token: write
  contents: read
  actions: read
  deployments: read

jobs:
  e2e-tests:
    environment: test
    runs-on: ubuntu-latest
    steps:
      - name:  Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION  }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Get Repo
        run: |
          echo "REGISTRY=$(echo "${{ env.REGISTRY }}/${{ github.repository }}" | tr [:upper:] [:lower:])" >> $GITHUB_ENV

      - name: Set e2e Cluster Name
        run: |
          echo "pr_sha_short=$(git rev-parse --short ${{ github.event.pull_request.head.sha }} )" >> $GITHUB_ENV
          rand=${{ env.pr_sha_short }}

          if [ "$rand" = "" ]; then
             rand=$RANDOM
          fi

          echo "CLUSTER_NAME=vk-aci-test${rand}" >> $GITHUB_ENV

      - uses: azure/login@v2.1.1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Run e2e test
        run: |
          OUTPUT_TYPE=type=registry make e2e-test
        env:
          REGISTRY: ${{ env.REGISTRY}}
          E2E_REGION: ${{ secrets.E2E_REGION}}
          CLUSTER_NAME: ${{ env.CLUSTER_NAME }}
          VERSION: ${{ env.E2E_IMG_TAG}}
          E2E_TARGET: "pr"
          PR_COMMIT_SHA: ${{ steps.vars.outputs.pr_sha_short }}

      - name: Cleanup e2e resources
        if: ${{ always() }}
        run: |
          set +e
          az group delete --name "${{ env.CLUSTER_NAME }}" --yes --no-wait || true