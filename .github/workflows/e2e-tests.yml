name: e2e-tests

on:
  pull_request_target:
    branches: [master]
    paths-ignore: [ docs/**, "**.md", "**.mdx", "**.png", "**.jpg" ]
  push:
    branches: [master]
    paths-ignore: [ docs/**, "**.md", "**.mdx", "**.png", "**.jpg" ]

permissions:
  id-token: write
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io

jobs:
  detect-noop:
    runs-on: ubuntu-latest
    outputs:
      noop: ${{ steps.noop.outputs.should_skip  }}
    steps:
      - name: Detect No-op Changes
        id: noop
        uses: fkirc/skip-duplicate-actions@v4.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN  }}
          do_not_skip: '["workflow_dispatch", "schedule", "push"]'
          concurrent_skipping: false

  export-registry:
    runs-on: ubuntu-20.04
    needs: detect-noop
    if: needs.detect-noop.outputs.noop != 'true'
    outputs:
      registry: ${{ steps.export.outputs.registry }}
    steps:
      - id: export
        run: |
          # registry must be in lowercase
          echo "::set-output name=registry::$(echo "${{ env.REGISTRY }}/${{ github.repository }}" | tr [:upper:] [:lower:])"

  e2e-tests:
    needs: export-registry
    environment: test
    env:
      CLIENTID: 'd1464cac-2a02-4e77-a1e3-c6a9220e99b9'
      SUBSCRIPTIONID: '076cd026-379c-4383-8bec-8835382efe90'
      TENANT_ID: '72f988bf-86f1-41af-91ab-2d7cd011db47'
      REGISTRY: ${{ needs.export-registry.outputs.registry }}
      IMG_VERSION: "dev"
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ secrets.GO_VERSION  }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Login to ${{ env.REGISTRY }}
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image version
        run: |
          echo "IMG_VERSION=$(git describe --abbrev=0 --tags --always)" >> $GITHUB_ENV      

      - name: Build image
        run: |
          OUTPUT_TYPE=type=registry make docker-build-image
        env:
          VERSION: ${{ env.IMG_VERSION }}

      - name: Install Azure CLI latest
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az version
      - uses: azure/login@v1.4.5
        with:
          client-id: ${{ env.CLIENTID }}
          tenant-id: ${{ env.TENANT_ID }}
          subscription-id: ${{ env.SUBSCRIPTIONID }}

      - name: Run e2e test
        run: |
          make e2e-test
        env:
          REGISTRY: ${{ env.REGISTRY}}
      - name: Delete image
        uses: bots-house/ghcr-delete-image-action@v1.0.1
        with:
          owner: virtual-kubelet/azure-aci
          name: virtual-kubelet
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.IMG_VERSION }}
